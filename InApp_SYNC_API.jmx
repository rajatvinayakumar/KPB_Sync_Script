<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="formation_Meeting_SYNC_API" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Sync  Formation Output" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ADD_Centers" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add_Centers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;center&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_name&quot;: &quot;phase 3&quot;,&#xd;
      &quot;center_image&quot;: &quot;0&quot;,&#xd;
      &quot;pin_code&quot;: &quot;670013&quot;,         &#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;11/10/2018 03:46:28&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;11/10/2018 03:46:43&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_name&quot;: &quot;Nila&quot;,&#xd;
      &quot;center_image&quot;: &quot;0&quot;,&#xd;
      &quot;pin_code&quot;: &quot;670013&quot;,         &#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;11/10/2018 03:46:28&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;11/10/2018 03:46:43&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ]  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/centers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.center[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.center[1].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="meeting" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="meetings" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;1&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;19/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;Formation meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;1&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10002&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id2},&#xd;
      &quot;meeting_type&quot;: &quot;1&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;19/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;21&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;Formation Meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;30/10/2018 13:00:00&quot; ,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;1&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
       &quot;attendance_image_id&quot;:0&#xd;
&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">FormationMeeting</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;_</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Meeting Update" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Meeting Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${FormationMeeting},&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;1&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;19/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot; Update Formation meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;1&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="customer Creation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="customer" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;0&quot;,&#xd;
      &quot;religion_type&quot;: &quot;0&quot;,&#xd;
      &quot;caste_id&quot;: &quot;0&quot;,&#xd;
      &quot;caste_type&quot;: &quot;0&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;0&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;0&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;sai krishnan&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;0&quot;,&#xd;
      &quot;language_id&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/customers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customer</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="customer Creation" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="customer" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: &quot;176&quot;,&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;3&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;1&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;rajat&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;10001&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;1&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;1&quot;,&#xd;
      &quot;family_status&quot;: &quot;1&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;1&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;5&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;1&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;1&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/sync/customers</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${Token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">customer</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;image</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Notes" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Notes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;notes&quot;: [&#xd;
       {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;office_id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;editable&quot;: &quot;1&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;1&quot;,&#xd;
      &quot;meeting_id&quot;: ${FormationMeeting},&#xd;
      &quot;description&quot;: &quot;formation&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;11/10/2018 03:48:32&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/notes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Monitoring" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Monitoring" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;monitors&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;employee_id&quot;: &quot;4&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_id&quot;: ${FormationMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;1&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 18:36:46&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 18:47:52&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;&#xd;
     }&#xd;
    ]&#xd;
  }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/sync/monitoring</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Contact Number" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Contact Number" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;contact_number&quot;: [&#xd;
{&#xd;
&quot;_id&quot;: &quot;10001&quot;,&#xd;
&quot;id&quot;: &quot;0&quot;,&#xd;
&quot;customer_id&quot;: ${customer},&#xd;
&quot;contact_number&quot;: &quot;8678923444&quot;,&#xd;
&quot;type&quot;: &quot;1&quot;,&#xd;
&quot;create_date_time&quot;: &quot;16/11/2018 16:25:14&quot;,&#xd;
&quot;update_date_time&quot;: &quot;16/11/2018 16:43:12&quot;,&#xd;
&quot;created_by&quot;: &quot;12&quot;,&#xd;
&quot;status&quot;: &quot;7&quot;&#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/contactnumbers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Update_Centers" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update_centers" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;center&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;${id1}&quot;,&#xd;
      &quot;center_name&quot;: &quot;Phase 3&quot;,&#xd;
      &quot;center_image&quot;: &quot;0&quot;,&#xd;
      &quot;pin_code&quot;: &quot;6700134&quot;,         &#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;19/11/2018 03:46:28&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 03:46:43&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;${id2}&quot;,&#xd;
      &quot;center_name&quot;: &quot;Nila&quot;,&#xd;
      &quot;center_image&quot;: &quot;0&quot;,&#xd;
      &quot;pin_code&quot;: &quot;6700135&quot;,         &#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;19/11/2018 03:46:28&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 03:46:43&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ]  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/centers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="group" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="group" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer_group&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10004&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: &quot;165&quot;,&#xd;
      &quot;group_name&quot;: &quot;trivandrum&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/11/2018 12:12:54&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/11/2018 09:31:12&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/groups</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="checklist" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Checklist" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&quot;checklist_answer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;24&quot;,&#xd;
      &quot;center_id&quot;: &quot;176&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: &quot;2&quot;,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    }]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/checklists</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;18&quot;,&#xd;
      &quot;center_id&quot;:102,&#xd;
      &quot;name&quot;: &quot;Anoop  hh&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1967&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Doctor&quot;,&#xd;
      &quot;education&quot;: &quot;11/10/2018 03:46:28&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;14&quot;,&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;note&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;19&quot;,&#xd;
      &quot;center_id&quot;:102,&#xd;
      &quot;name&quot;: &quot;Arjun gg&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;29/12/1967&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Software Engineer&quot;,&#xd;
      &quot;education&quot;: &quot;11/10/2018 03:46:28&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;0&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;1000&quot;,&#xd;
      &quot;customer_id&quot;: &quot;14&quot;,&#xd;
      &quot;status&quot;: &quot;10&quot;,&#xd;
      &quot;note&quot;:&quot;Test Notes&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;address_proof&quot;: [{&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: &quot;54&quot;,&#xd;
                &quot;center_id&quot;: &quot;176&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;1&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;291782018903&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;4&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;5&quot;,&#xd;
                &quot;name&quot;: &quot;Ammini&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;0&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;0&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;0&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="family" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;17&quot;,&#xd;
      &quot;center_id&quot;:176,&#xd;
      &quot;name&quot;: &quot;RAJAT1&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1967&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;55&quot;,&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;note&quot;:&quot;hai&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;18&quot;,&#xd;
      &quot;center_id&quot;:176,&#xd;
      &quot;name&quot;: &quot;kavya2&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;29/12/1967&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Software Engineer&quot;,&#xd;
      &quot;education&quot;: &quot;16/11/2018 03:46:28&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;0&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;1000&quot;,&#xd;
      &quot;customer_id&quot;: &quot;55&quot;,&#xd;
      &quot;status&quot;: &quot;10&quot;,&#xd;
      &quot;note&quot;:&quot;Test Notes&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Co-Applicant/Continue Gurantor" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Co-applicant" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;55&quot;,&#xd;
      &quot;center_id&quot;: &quot;176&quot;,&#xd;
      &quot;office_id&quot;: &quot;6&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;1&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Renju&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;${customer}&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;1&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;1&quot;,&#xd;
      &quot;family_status&quot;: &quot;1&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;1&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Technopark&quot;,&#xd;
      &quot;language_type&quot;: &quot;Tamil&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;1&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;1&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/coapplicants</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="questionnaire" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="questionnaire" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;questionnaire_answer_sheet&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;115&quot;,&#xd;
      &quot;customer_id&quot;: &quot;67&quot;,&#xd;
      &quot;center_id&quot;: &quot;176&quot;,&#xd;
      &quot;question_id&quot;: &quot;12&quot;,&#xd;
      &quot;answer_id&quot;: &quot;1&quot;,&#xd;
      &quot;custom_answer&quot;: &quot;testing&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 11:00:30&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 11:03:48&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10004&quot;,&#xd;
      &quot;id&quot;: &quot;116&quot;,&#xd;
      &quot;customer_id&quot;: &quot;68&quot;,&#xd;
      &quot;center_id&quot;: &quot;176&quot;,&#xd;
      &quot;question_id&quot;: &quot;13&quot;,&#xd;
      &quot;answer_id&quot;: &quot;1&quot;,&#xd;
      &quot;custom_answer&quot;: &quot;Trivandrum&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 11:00:31&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/questionnaires</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Attendes" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="attendes" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;attendees&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10006&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: &quot;176&quot;,&#xd;
      &quot;member_id&quot;: &quot;69&quot;,&#xd;
      &quot;meeting_id&quot;: &quot;65&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;notes&quot;: &quot;Attendee Notes added&quot;,&#xd;
      &quot;attendence_date_time&quot;: &quot;&quot;,&#xd;
      &quot;attendance_status&quot;: &quot;3&quot;,&#xd;
      &quot;isRemoved&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 15:13:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 15:47:08&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;image_id&quot;: 0&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/attendees</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="group creation" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="group" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer_group&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;&quot;,&#xd;
      &quot;id&quot;: &quot;186&quot;,&#xd;
      &quot;center_id&quot;: &quot;176&quot;,&#xd;
      &quot;group_name&quot;: &quot;Technopark Phase 4&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 09:12:54&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 09:31:12&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/groups</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="adding customer to group" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Adding Customer to group" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: &quot;176&quot;,&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;3&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;186&quot;,&#xd;
      &quot;group_position&quot;: &quot;1&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;1&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;rajat&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;10001&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;1&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;1&quot;,&#xd;
      &quot;family_status&quot;: &quot;1&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;1&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;5&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;1&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;1&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/customers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customer</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;image</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BANK" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;6&quot;,&#xd;
      &quot;center_id&quot;: &quot;176&quot;,&#xd;
      &quot;customer_id&quot;: &quot;71&quot;,&#xd;
      &quot;customer_name&quot;: &quot;Rajat&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;0&quot;,&#xd;
      &quot;bank_name&quot;: &quot;HDFC Bank&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Kannnur&quot;,&#xd;
      &quot;account_number&quot;: &quot;2681119008914&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;CNRB0002681&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;17/11/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;17/11/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CGT_Meeting_SYNC_API" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Sync_ CGT_ Meeting_ Output" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ADD_Centers" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add_Centers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;center&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_name&quot;: &quot;RealMadrid&quot;,&#xd;
      &quot;center_image&quot;: &quot;0&quot;,&#xd;
      &quot;pin_code&quot;: &quot;670013&quot;,         &#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;11/10/2018 03:46:28&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;11/10/2018 03:46:43&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;&#xd;
    }&#xd;
    &#xd;
  ]  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/centers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.center[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.center[1].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="meeting" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="meetings" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;1&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;19/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;19/11/2018 10:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;19/11/2018 11:00:00&quot;,&#xd;
      &quot;description&quot;:&quot;Formation Meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;1&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;19/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;19/11/2018 12:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;CGT Meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;1&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="CGTMeeting" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">CGTMeeting</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.meetings[1].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Meeting Update" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Meeting Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${CGTMeeting},&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;19/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;19/11/2018 10:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;19/11/2018 17:00:00&quot;,&#xd;
      &quot;description&quot;:&quot; Update CGT meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;1&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;21/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot; Update CGT meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;1&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
    &#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="customer Creation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="customer" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
     {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;anusree CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/customers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customer</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member as Continue Gurantor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames"> ContinueGurantor</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[1].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NewMember</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[2].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="family" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;name&quot;: &quot;Arshad&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1989&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;note&quot;:&quot;hai&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Co-Applicant/Continue Gurantor of  a Member" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Co-applicant" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;6&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;kavyaCGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;5&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Technopark&quot;,&#xd;
      &quot;language_type&quot;: &quot;Tamil&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;5&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/coapplicants</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="New Member as CG of Exiisting Member" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="New Member as CG" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;6&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Kavya&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;:${ContinueGurantor},&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Technopark&quot;,&#xd;
      &quot;language_type&quot;: &quot;Tamil&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;22&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/coapplicants</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co-Applicant" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Co-Applicant</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[0].co_applicant</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="continue_guarantor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">continue_guarantor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[0].continue_guarantor</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Notes" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Notes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;notes&quot;: [&#xd;
       {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;office_id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;editable&quot;: &quot;1&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;description&quot;: &quot;CGT Meeting 19/11/2018&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;11/10/2018 03:48:32&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/notes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Monitoring" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Monitoring" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;monitors&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;employee_id&quot;: &quot;4&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 18:36:46&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 18:47:52&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;&#xd;
     }&#xd;
    ]&#xd;
  }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/sync/monitoring</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Contact Number" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Contact Number" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;contact_number&quot;: [&#xd;
{&#xd;
&quot;_id&quot;: &quot;10001&quot;,&#xd;
&quot;id&quot;: &quot;0&quot;,&#xd;
&quot;customer_id&quot;: ${customer},&#xd;
&quot;contact_number&quot;: &quot;8678923444&quot;,&#xd;
&quot;type&quot;: &quot;1&quot;,&#xd;
&quot;create_date_time&quot;: &quot;16/11/2018 16:25:14&quot;,&#xd;
&quot;update_date_time&quot;: &quot;16/11/2018 16:43:12&quot;,&#xd;
&quot;created_by&quot;: &quot;12&quot;,&#xd;
&quot;status&quot;: &quot;7&quot;&#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/contactnumbers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Member aadhar" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Member aadhar,voter id,PAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;1&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }, &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;KL/17/117/102647&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;0123456789&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
  &#xd;
        &#xd;
        &#xd;
     ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Member Voter  ID" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Member Voter ID" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;KL/17/117/102647&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Member PAN" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Member PAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="questionnaire" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="questionnaire" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;questionnaire_answer_sheet&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;question_id&quot;: &quot;7&quot;,&#xd;
      &quot;answer_id&quot;: &quot;125&quot;,&#xd;
      &quot;custom_answer&quot;: &quot;&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 11:00:30&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 11:03:48&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/questionnaires</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BANK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;customer_name&quot;: &quot;KavyaCGT&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;HDFC Bank&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Kannnur&quot;,&#xd;
      &quot;account_number&quot;: &quot;2681119008914&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;CNRB0002681&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;17/11/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;17/11/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Co-applicant" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Co-Applicant" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${Co-Applicant},&#xd;
                &quot;customer_type&quot;: &quot;Co-Applicant&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;6&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;234564567823&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Arshad CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Continue Gurantor" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of continue_guarantor" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${continue_guarantor},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Attendes" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="attendes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;attendees&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10006&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;notes&quot;: &quot;Attendee Notes added&quot;,&#xd;
      &quot;attendence_date_time&quot;: &quot;&quot;,&#xd;
      &quot;attendance_status&quot;: &quot;1&quot;,&#xd;
      &quot;isRemoved&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 15:13:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 15:47:08&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;image_id&quot;: 0&#xd;
    },&#xd;
     {&#xd;
      &quot;_id&quot;: &quot;10006&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${continue_guarantor},&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;notes&quot;: &quot;Attendee Notes added&quot;,&#xd;
      &quot;attendence_date_time&quot;: &quot;&quot;,&#xd;
      &quot;attendance_status&quot;: &quot;3&quot;,&#xd;
      &quot;isRemoved&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 15:13:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 15:47:08&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;image_id&quot;: 0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10006&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${NewMember},&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;notes&quot;: &quot;Attendee Notes added&quot;,&#xd;
      &quot;attendence_date_time&quot;: &quot;&quot;,&#xd;
      &quot;attendance_status&quot;: &quot;2&quot;,&#xd;
      &quot;isRemoved&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 15:13:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 15:47:08&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;image_id&quot;: 0&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/attendees</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="checklist" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Checklist" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&quot;checklist_answer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;1&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;2&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;3&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;4&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;5&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;6&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;7&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;8&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;9&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;10&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;11&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;12&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;13&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/checklists</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="group creation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="group" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer_group&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10004&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;group_name&quot;: &quot;Group 4&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;20/11/2018 09:12:54&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;20/11/2018 09:31:12&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/groups</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">group</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer_group[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">error_on_token</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="customer  addition to group" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="customer addition to group" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: ${group},&#xd;
      &quot;group_position&quot;: &quot;1&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
     {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${ContinueGurantor},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: ${group},&#xd;
      &quot;group_position&quot;: &quot;2&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${NewMember},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: ${group},&#xd;
      &quot;group_position&quot;: &quot;3&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;anusree CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/customers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customer</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member as Continue Gurantor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames"> ContinueGurantor</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[1].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NewMember</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[2].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CGT_Retake_SYNC_API" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="CGT_ Retake_ Meeting_ Output" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ADD_Centers" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add_Centers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;center&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_name&quot;: &quot;QA Testing Nov-22 GRT Retake/Retrain&quot;,&#xd;
      &quot;center_image&quot;: &quot;0&quot;,&#xd;
      &quot;pin_code&quot;: &quot;670013&quot;,         &#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;21/10/2018 03:46:28&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;21/10/2018 03:46:43&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;&#xd;
    }&#xd;
    &#xd;
  ]  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/centers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.center[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.center[1].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="customer Creation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="customer" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
     {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Yamuna Phase 3 Kulathoor, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;anusree CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase 2, Technopark,Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/customers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customer</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member as Continue Gurantor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames"> ContinueGurantor</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[1].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NewMember</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[2].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="meeting" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="meetings" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;1&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;22/11/2018 11:00:00&quot;,&#xd;
      &quot;description&quot;:&quot;Formation Meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;22/11/2018 12:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;CGT Meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="CGTMeeting" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">CGTMeeting</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.meetings[1].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="family" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;name&quot;: &quot;Arshad&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1989&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;name&quot;: &quot;vinu&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1972&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: ${ContinueGurantor},&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;name&quot;: &quot;Biju&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1964&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: ${NewMember},&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Notes" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Notes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;notes&quot;: [&#xd;
       {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;office_id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;editable&quot;: &quot;1&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;description&quot;: &quot;CGT Meeting 19/11/2018&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;11/10/2018 03:48:32&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/notes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Contact Number" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Contact Number" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;contact_number&quot;: [&#xd;
{&#xd;
&quot;_id&quot;: &quot;10001&quot;,&#xd;
&quot;id&quot;: &quot;0&quot;,&#xd;
&quot;customer_id&quot;: ${customer},&#xd;
&quot;contact_number&quot;: &quot;8678923444&quot;,&#xd;
&quot;type&quot;: &quot;1&quot;,&#xd;
&quot;create_date_time&quot;: &quot;16/11/2018 16:25:14&quot;,&#xd;
&quot;update_date_time&quot;: &quot;16/11/2018 16:43:12&quot;,&#xd;
&quot;created_by&quot;: &quot;12&quot;,&#xd;
&quot;status&quot;: &quot;7&quot;&#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/contactnumbers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Monitoring" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Monitoring" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;monitors&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;employee_id&quot;: &quot;4&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 18:36:46&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 18:47:52&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;&#xd;
     }&#xd;
    ]&#xd;
  }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/sync/monitoring</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Meeting Update" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Meeting Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${CGTMeeting},&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;22/11/2018 17:00:00&quot;,&#xd;
      &quot;description&quot;:&quot; Update CGT meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/11/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/11/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;Scheduled GRT meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/11/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/11/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
    &#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="questionnaire" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="questionnaire" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;questionnaire_answer_sheet&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;question_id&quot;: &quot;7&quot;,&#xd;
      &quot;answer_id&quot;: &quot;125&quot;,&#xd;
      &quot;custom_answer&quot;: &quot;&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 11:00:30&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 11:03:48&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/questionnaires</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="New Member as CG of Exiisting Member" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="New Member as CG" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;6&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Kavya&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;:${ContinueGurantor},&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Technopark&quot;,&#xd;
      &quot;language_type&quot;: &quot;Tamil&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;22&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${ContinueGurantor},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;6&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Kavya&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;:${NewMember},&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Technopark&quot;,&#xd;
      &quot;language_type&quot;: &quot;Tamil&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;22&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${NewMember},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;6&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;kavyaCGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;5&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Technopark&quot;,&#xd;
      &quot;language_type&quot;: &quot;Tamil&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;5&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/coapplicants</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co-Applicant" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Co-Applicant</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[0].co_applicant</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co-Applicant1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Co-Applicant1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[1].co_applicant</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">error_on_Token</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="continue_guarantor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">continue_guarantor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[0].continue_guarantor</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co-Applicant2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Co-Applicant2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[2].co_applicant</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">error_on_Token</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BANK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;customer_name&quot;: &quot;KavyaCGT&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;HDFC Bank&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Kannnur&quot;,&#xd;
      &quot;account_number&quot;: &quot;2681119008914&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;CNRB0002681&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;17/11/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;17/11/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${ContinueGurantor},&#xd;
      &quot;customer_name&quot;: &quot;AbhiramCGT&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;HDFC Bank&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Kannnur&quot;,&#xd;
      &quot;account_number&quot;: &quot;2681119008914&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;CNRB0002681&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;17/11/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;17/11/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${NewMember},&#xd;
      &quot;customer_name&quot;: &quot;KavyaCGT&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;HDFC Bank&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Kannnur&quot;,&#xd;
      &quot;account_number&quot;: &quot;2681119008914&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;CNRB0002681&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;17/11/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;17/11/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }&#xd;
    &#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Member aadhar" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Member aadhar,voter id,PAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;1&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }, &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;KL/17/117/102647&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;0123456789&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
  &#xd;
        &#xd;
        &#xd;
     ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Co-applicant" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Co-Applicant" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${Co-Applicant},&#xd;
                &quot;customer_type&quot;: &quot;Co-Applicant&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;6&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;234564567823&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Arshad CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${Co-Applicant1},&#xd;
                &quot;customer_type&quot;: &quot;Co-Applicant&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;6&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;672345641234&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Biju CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam-0&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1994&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${Co-Applicant2},&#xd;
                &quot;customer_type&quot;: &quot;Co-Applicant&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;6&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;342356781234&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Vinu CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam-1&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/3/1992&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Continue Gurantor" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of continue_guarantor" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${continue_guarantor},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;1&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${continue_guarantor},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${continue_guarantor},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of  new Member aadhar" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of  new Member aadhar,voter id,PAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${NewMember},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;1&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }, &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${NewMember},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;KL/17/117/102647&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${NewMember},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;0123456789&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
   ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Attendes" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="attendes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;attendees&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10006&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;notes&quot;: &quot;Attendee Notes added&quot;,&#xd;
      &quot;attendence_date_time&quot;: &quot;&quot;,&#xd;
      &quot;attendance_status&quot;: &quot;1&quot;,&#xd;
      &quot;isRemoved&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 15:13:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 15:47:08&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;image_id&quot;: 0&#xd;
    },&#xd;
     {&#xd;
      &quot;_id&quot;: &quot;10006&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${continue_guarantor},&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;notes&quot;: &quot;Attendee Notes added&quot;,&#xd;
      &quot;attendence_date_time&quot;: &quot;&quot;,&#xd;
      &quot;attendance_status&quot;: &quot;3&quot;,&#xd;
      &quot;isRemoved&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 15:13:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 15:47:08&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;image_id&quot;: 0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10006&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${NewMember},&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;notes&quot;: &quot;Attendee Notes added&quot;,&#xd;
      &quot;attendence_date_time&quot;: &quot;&quot;,&#xd;
      &quot;attendance_status&quot;: &quot;2&quot;,&#xd;
      &quot;isRemoved&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 15:13:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 15:47:08&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;image_id&quot;: 0&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/attendees</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="checklist" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Checklist" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&quot;checklist_answer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;1&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;2&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;3&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;4&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;5&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;6&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;7&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;8&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;9&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;10&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;11&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;12&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;13&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/checklists</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="group creation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="group" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer_group&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10004&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;group_name&quot;: &quot;Group 4&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;20/11/2018 09:12:54&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;20/11/2018 09:31:12&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/groups</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">group</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer_group[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">error_on_token</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="customer  addition to group" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="customer addition to group" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: ${group},&#xd;
      &quot;group_position&quot;: &quot;1&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
     {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${ContinueGurantor},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: ${group},&#xd;
      &quot;group_position&quot;: &quot;2&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${NewMember},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: ${group},&#xd;
      &quot;group_position&quot;: &quot;3&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;anusree CGT&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Phase1, Thiruvananthapuram, Kerala 695581, India ThiruvananthapuramKeralaIndia695581&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/customers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customer</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member as Continue Gurantor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames"> ContinueGurantor</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[1].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member " enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">NewMember</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[2].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="sync down_FO" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sync down" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/sync/down</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CGT Meeting Update" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Meeting CGT Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;218&quot;,&#xd;
      &quot;center_id&quot;:&quot;214&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;05/11/2018 06:00:34&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;05/11/2018 06:00:34&quot;,&#xd;
      &quot;description&quot;:&quot;CGT Retake meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;05/11/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;05/11/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;&quot;,&#xd;
      &quot;center_id&quot;:&quot;214&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;GRT New  meeting for Dec 5&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;05/11/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;05/11/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="address update" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="address update of member" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">  {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;253&quot;,&#xd;
                &quot;customer_id&quot;: &quot;165&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: &quot;214&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;LRM2675604&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Anita G Voter ID Dec 5.1&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Vdakkapuruthu 3&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;07/03/1983&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Kodumon&quot;,&#xd;
                &quot;post_office&quot;: &quot;kodumon&quot;,&#xd;
                &quot;district&quot;: &quot;Pathanamtthita&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691555&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;04/12/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;04/12/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
              &#xd;
     ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bank" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;72&quot;,&#xd;
      &quot;center_id&quot;: &quot;214&quot;,&#xd;
      &quot;customer_id&quot;: &quot;165&quot;,&#xd;
      &quot;customer_name&quot;: &quot;Anita G GRT retake 5 Dec&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;State Bank of Travancore-27&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Pathanamthitta&quot;,&#xd;
      &quot;account_number&quot;: &quot;67070774735&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;SBTR0000560&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;04/12/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;04/12/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="family" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;29&quot;,&#xd;
      &quot;center_id&quot;: &quot;133&quot;,&#xd;
      &quot;name&quot;: &quot;damu-1&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1921&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;53&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;30&quot;,&#xd;
      &quot;center_id&quot;: &quot;133&quot;,&#xd;
      &quot;name&quot;: &quot;damu-2&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1921&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;54&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GRT_Submit_Meeting_BM Sync_Down" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">kpb.inapp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sync down" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/sync/down</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GRT Meeting Submit" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Meeting CGT Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;107&quot;,&#xd;
      &quot;center_id&quot;:&quot;161&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;description&quot;:&quot;GRT Submitted&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
     {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:&quot;161&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;4&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;center meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;2&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="address update" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="address update of member" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;80&quot;,&#xd;
                &quot;customer_id&quot;:&quot;53&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;:&quot;133&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;1&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam1&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara-1&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;81&quot;,&#xd;
                &quot;customer_id&quot;:&quot;53&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;:&quot;133&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692v10497163&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam2&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara-2&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;82&quot;,&#xd;
                &quot;customer_id&quot;:&quot;53&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;:&quot;127&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;PANCARD111121&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam2&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },  {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;78&quot;,&#xd;
                &quot;customer_id&quot;:&quot;53&quot;,&#xd;
                &quot;customer_type&quot;: &quot;Co-Applicant&quot;,&#xd;
                &quot;center_id&quot;:&quot;133&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;6&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;VOTER1234&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam2&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        } &#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bank" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;18&quot;,&#xd;
      &quot;center_id&quot;:&quot;133&quot;,&#xd;
      &quot;customer_id&quot;: &quot;53&quot;,&#xd;
      &quot;customer_name&quot;: &quot;AbhiramCGTedit&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;HDFC Bank-1&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Kannnur-1&quot;,&#xd;
      &quot;account_number&quot;: &quot;2681119008913&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;CNRB0002681&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;17/11/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;17/11/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="family" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;29&quot;,&#xd;
      &quot;center_id&quot;: &quot;133&quot;,&#xd;
      &quot;name&quot;: &quot;damu-1&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1921&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;53&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;30&quot;,&#xd;
      &quot;center_id&quot;: &quot;133&quot;,&#xd;
      &quot;name&quot;: &quot;damu-2&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1921&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;54&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GRT_Retrain_Submit_Meeting_BM Sync_Down" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CGT Meeting Update" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Meeting CGT Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;76&quot;,&#xd;
      &quot;center_id&quot;:&quot;142&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;11&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;description&quot;:&quot;GRT Retrain&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30:00&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
     &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="address update" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="address update of member" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;80&quot;,&#xd;
                &quot;customer_id&quot;:&quot;53&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;:&quot;133&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;1&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam1&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara-1&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;81&quot;,&#xd;
                &quot;customer_id&quot;:&quot;53&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;:&quot;133&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692v10497163&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam2&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara-2&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;82&quot;,&#xd;
                &quot;customer_id&quot;:&quot;53&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;:&quot;127&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;PANCARD111121&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam2&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },  {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;78&quot;,&#xd;
                &quot;customer_id&quot;:&quot;53&quot;,&#xd;
                &quot;customer_type&quot;: &quot;Co-Applicant&quot;,&#xd;
                &quot;center_id&quot;:&quot;133&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;6&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;VOTER1234&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam2&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        } &#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bank" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;18&quot;,&#xd;
      &quot;center_id&quot;:&quot;133&quot;,&#xd;
      &quot;customer_id&quot;: &quot;53&quot;,&#xd;
      &quot;customer_name&quot;: &quot;AbhiramCGTedit&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;HDFC Bank-1&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Kannnur-1&quot;,&#xd;
      &quot;account_number&quot;: &quot;2681119008913&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;CNRB0002681&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;17/11/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;17/11/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="family" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;29&quot;,&#xd;
      &quot;center_id&quot;: &quot;133&quot;,&#xd;
      &quot;name&quot;: &quot;damu-1&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1921&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;53&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;30&quot;,&#xd;
      &quot;center_id&quot;: &quot;133&quot;,&#xd;
      &quot;name&quot;: &quot;damu-2&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1921&quot;,         &#xd;
      &quot;occupation&quot;: &quot;Developer&quot;,&#xd;
      &quot;education&quot;: &quot;Engineering&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;54&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sync down" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/sync/down</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CGT_Meeting(1)ActualData_SYNC_API" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="CGT Meeting Actual Data" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ADD_Centers" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add_Centers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;center&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_name&quot;: &quot;Dec 5 GRT Retrain/Retake&quot;,&#xd;
      &quot;center_image&quot;: &quot;0&quot;,&#xd;
      &quot;pin_code&quot;: &quot;670013&quot;,         &#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;11/10/2018 03:46:28&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;11/10/2018 03:46:43&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;&#xd;
    }&#xd;
    &#xd;
  ]  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/centers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.center[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.center[1].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="meeting" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="meetings" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;1&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;22/11/2018 11:00:00&quot;,&#xd;
      &quot;description&quot;:&quot;Formation Meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/11/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/11/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;22/11/2018 12:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;CGT Meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;30/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="CGTMeeting" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">CGTMeeting</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.meetings[1].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Meeting Update" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Meeting Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${CGTMeeting},&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;22/11/2018 17:00:00&quot;,&#xd;
      &quot;description&quot;:&quot; Update CGT meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/10/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/10/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;22/11/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot; Schedule A GRT Meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/11/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/11/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
    &#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="customer Creation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="customer" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Anita S&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Kodumon PO,Pathanamthitta,kerala,691555&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/customers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customer</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member as Continue Gurantor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames"> ContinueGurantor</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[1].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="New Member " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NewMember</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[2].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="family" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:${id1},&#xd;
      &quot;name&quot;: &quot;Rajeevan K&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1977&quot;,         &#xd;
      &quot;occupation&quot;: &quot;farmer&quot;,&#xd;
      &quot;education&quot;: &quot;10&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Co-Applicant/Continue Gurantor of  a Member" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Co-applicant" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;6&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Anita S&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;5&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Technopark&quot;,&#xd;
      &quot;language_type&quot;: &quot;Tamil&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;5&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/coapplicants</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co-Applicant" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Co-Applicant</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[0].co_applicant</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">error_Token</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="New Member as CG of Exiisting Member" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="New Member as CG" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;6&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_position&quot;: &quot;0&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;2&quot;,&#xd;
      &quot;religion_type&quot;: &quot;Christianity&quot;,&#xd;
      &quot;caste_id&quot;: &quot;1&quot;,&#xd;
      &quot;caste_type&quot;: &quot;OBC&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Kavya&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;5&quot;,&#xd;
      &quot;continue_guarantor&quot;:${ContinueGurantor},&#xd;
      &quot;family_member_count&quot;: &quot;1&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Nila Technopark&quot;,&#xd;
      &quot;language_type&quot;: &quot;Tamil&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;22&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;relation&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/coapplicants</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co-Applicant" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">Co-Applicant</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[0].co_applicant</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="continue_guarantor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">continue_guarantor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer[0].continue_guarantor</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Error_ON_Json</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Notes" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Notes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;notes&quot;: [&#xd;
       {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;office_id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;editable&quot;: &quot;1&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;description&quot;: &quot;CGT Meeting 22/11/2018&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;22/10/2018 03:48:32&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/notes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Monitoring" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Monitoring" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;monitors&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;employee_id&quot;: &quot;4&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 18:36:46&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 18:47:52&quot;,&#xd;
      &quot;created_by&quot;: &quot;4&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;&#xd;
     }&#xd;
    ]&#xd;
  }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/sync/monitoring</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Contact Number" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Contact Number" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;contact_number&quot;: [&#xd;
{&#xd;
&quot;_id&quot;: &quot;10001&quot;,&#xd;
&quot;id&quot;: &quot;0&quot;,&#xd;
&quot;customer_id&quot;: ${customer},&#xd;
&quot;contact_number&quot;: &quot;8678923444&quot;,&#xd;
&quot;type&quot;: &quot;1&quot;,&#xd;
&quot;create_date_time&quot;: &quot;16/11/2018 16:25:14&quot;,&#xd;
&quot;update_date_time&quot;: &quot;16/11/2018 16:43:12&quot;,&#xd;
&quot;created_by&quot;: &quot;12&quot;,&#xd;
&quot;status&quot;: &quot;7&quot;&#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/contactnumbers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Member aadhar" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Member aadhar,voter id,PAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;1&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;494386606016&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Anita G&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Raman&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1985&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;kodumon&quot;,&#xd;
                &quot;post_office&quot;: &quot;kodumon&quot;,&#xd;
                &quot;district&quot;: &quot;Pathananthitta&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691555&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;22/11/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;22/11/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }, &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;LRM2675601&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Anita G&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Vdakkapuruthu 3&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;07/03/1983&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Kodumon&quot;,&#xd;
                &quot;post_office&quot;: &quot;kodumon&quot;,&#xd;
                &quot;district&quot;: &quot;Pathanamtthita&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691555&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Anita G&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;7/3/1983&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
  &#xd;
        &#xd;
        &#xd;
     ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Member Voter  ID" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Member Voter ID" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;KL/17/117/102647&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Member PAN" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Member PAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${customer},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Kavya CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="questionnaire" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="questionnaire" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;questionnaire_answer_sheet&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;question_id&quot;: &quot;7&quot;,&#xd;
      &quot;answer_id&quot;: &quot;125&quot;,&#xd;
      &quot;custom_answer&quot;: &quot;&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 11:00:30&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 11:03:48&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/questionnaires</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BANK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;customer_name&quot;: &quot;Anita G&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;State Bank of Travancore&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Pathanamthitta&quot;,&#xd;
      &quot;account_number&quot;: &quot;67070774735&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;SBTR0000560&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;17/11/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;17/11/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Co-applicant" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Co-Applicant" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${Co-Applicant},&#xd;
                &quot;customer_type&quot;: &quot;Co-Applicant&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;6&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;559064344367&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Rajeevan K&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Raman&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1977&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Kodumon&quot;,&#xd;
                &quot;post_office&quot;: &quot;kodumon&quot;,&#xd;
                &quot;district&quot;: &quot;Pathanamthitta&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691555&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Continue Gurantor" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of continue_guarantor" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;0&quot;,&#xd;
                &quot;customer_id&quot;: ${continue_guarantor},&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: ${id1},&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;692804971649&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;abhiram CGT&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1991&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Attendes" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="attendes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;attendees&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10006&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;customer_id&quot;: ${customer},&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;notes&quot;: &quot;Attendee Notes added&quot;,&#xd;
      &quot;attendence_date_time&quot;: &quot;&quot;,&#xd;
      &quot;attendance_status&quot;: &quot;1&quot;,&#xd;
      &quot;isRemoved&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;16/11/2018 15:13:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;16/11/2018 15:47:08&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;image_id&quot;: 0&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/attendees</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="checklist" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Checklist" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&quot;checklist_answer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;1&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;2&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;3&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;4&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;5&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;6&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;7&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;8&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;9&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;10&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;11&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;12&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;checklist_id&quot;: &quot;1&quot;,&#xd;
      &quot;checklist_item_id&quot;: &quot;13&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;meeting_id&quot;: ${CGTMeeting} ,&#xd;
      &quot;completed&quot;: &quot;1&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;14/10/2018 06:40:57&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;14/10/2018 06:43:13&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/checklists</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="group creation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="group" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer_group&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10004&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;group_name&quot;: &quot;Group 4&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;20/11/2018 09:12:54&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;20/11/2018 09:31:12&quot;,&#xd;
      &quot;created_by&quot;: &quot;102&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/groups</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">group</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.*.customer_group[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">error_on_token</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="customer  addition to group" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="customer addition to group" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customer&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: ${customer},&#xd;
      &quot;center_id&quot;: ${id1},&#xd;
      &quot;office_id&quot;: &quot;7&quot;,&#xd;
      &quot;image_id&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;temp_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;perm_address_proof_other_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;group_id&quot;: ${group},&#xd;
      &quot;group_position&quot;: &quot;1&quot;,&#xd;
      &quot;primary_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_id&quot;: &quot;1&quot;,&#xd;
      &quot;religion_type&quot;: &quot;1&quot;,&#xd;
      &quot;caste_id&quot;: &quot;2&quot;,&#xd;
      &quot;caste_type&quot;: &quot;2&quot;,&#xd;
      &quot;permanent_address_proof_id&quot;: &quot;1&quot;,&#xd;
      &quot;temporary_address_proof_id&quot;: &quot;2&quot;,&#xd;
      &quot;address_proof_sub_id&quot;: &quot;0&quot;,&#xd;
      &quot;primary_contact_number_id&quot;: &quot;0&quot;,&#xd;
      &quot;member_code&quot;: &quot;&quot;,&#xd;
      &quot;name&quot;: &quot;Anita S&quot;,&#xd;
      &quot;type&quot;: &quot;0&quot;,&#xd;
      &quot;care_of&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant&quot;: &quot;0&quot;,&#xd;
      &quot;continue_guarantor&quot;: &quot;0&quot;,&#xd;
      &quot;family_member_count&quot;: &quot;0&quot;,&#xd;
      &quot;marital_status&quot;: &quot;1&quot;,&#xd;
      &quot;gender&quot;: &quot;1&quot;,&#xd;
      &quot;kyc_status&quot;: &quot;0&quot;,&#xd;
      &quot;cb_status&quot;: &quot;0&quot;,&#xd;
      &quot;house_type_status&quot;: &quot;0&quot;,&#xd;
      &quot;family_status&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_status&quot;: &quot;0&quot;,&#xd;
      &quot;longitude&quot;: &quot;76.879180908203&quot;,&#xd;
      &quot;latitude&quot;: &quot;8.5466899871826&quot;,&#xd;
      &quot;house_location&quot;: &quot;Kodumon PO,Pathanamthitta,kerala,691555&quot;,&#xd;
      &quot;language_type&quot;: &quot;Malayalam&quot;,&#xd;
      &quot;language_id&quot;: &quot;1&quot;,&#xd;
      &quot;continue_guarantor_type&quot;: &quot;0&quot;,&#xd;
      &quot;co_applicant_selection&quot;: &quot;0&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;mgc_score&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;center_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_1&quot;: &quot;0&quot;,&#xd;
      &quot;group_leader_2&quot;: &quot;0&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;15/10/2018 04:47:50&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;is_deleted&quot;:0&#xd;
    }&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/customers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Loan Apply/request  FO" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Customer Loan Apply/Request" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Customer loan Apply in Center Meeting" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="loan apply " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;loan&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;customer_id&quot;: &quot;99&quot;,&#xd;
      &quot;group_id&quot;: &quot;162&quot;,&#xd;
      &quot;center_id&quot;: &quot;161&quot;,&#xd;
      &quot;loan_product_id&quot;: &quot;11&quot;,&#xd;
      &quot;guarantor_id&quot;: &quot;100&quot;,&#xd;
      &quot;loan_code&quot;: &quot;&quot;,&#xd;
      &quot;loan_type&quot;: &quot;1&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;repayment_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;total_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;completed_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;remaining_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;loan_amount&quot;: &quot;22000&quot;,&#xd;
      &quot;outstanding_amt&quot;: &quot;0&quot;,&#xd;
      &quot;arrear_amount&quot;: &quot;0&quot;,&#xd;
      &quot;total_deductions&quot;: &quot;0&quot;,&#xd;
      &quot;net_loan_disbursement&quot;: &quot;0&quot;,&#xd;
      &quot;payment_day&quot;: &quot;0&quot;,&#xd;
      &quot;weekly_day&quot;: &quot;1&quot;,&#xd;
      &quot;loan_purpose&quot;: &quot;Washing Machine&quot;,&#xd;
      &quot;disbursement_mode&quot;: &quot;&quot;,&#xd;
      &quot;loan_status&quot;: &quot;2&quot;,&#xd;
      &quot;loans_updated_at&quot;: &quot;2018-11-09 06:12:40&quot;,&#xd;
      &quot;paid_amount&quot;: &quot;0&quot;,&#xd;
      &quot;paid_date&quot;: &quot;&quot;,&#xd;
      &quot;markdeath_preclosure&quot;: &quot;0&quot;,&#xd;
      &quot;noc_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;noc_status&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;4&quot;,&#xd;
      &quot;employee_id&quot;: &quot;3&quot;,&#xd;
      &quot;branch_id&quot;: &quot;7&quot;,&#xd;
      &quot;disbursement_date&quot;: null,&#xd;
      &quot;witness&quot;: &quot;0&quot;,&#xd;
      &quot;signed&quot;: &quot;0&quot;,&#xd;
      &quot;signed_type&quot;: &quot;1&quot;,&#xd;
      &quot;witness_sign&quot;: &quot;0&quot;,&#xd;
      &quot;witness_sign_date&quot;: &quot;&quot;,&#xd;
      &quot;witness_sign_type&quot;: &quot;&quot;,&#xd;
      &quot;apply_date&quot;: &quot;22/11/2018&quot;,&#xd;
      &quot;request_date&quot;: null,&#xd;
      &quot;loan_scheme_id&quot;: &quot;1&quot;,&#xd;
      &quot;processing_fee&quot;: &quot;0&quot;,&#xd;
      &quot;processing_fee_percent&quot;: &quot;0&quot;,&#xd;
      &quot;member_insurance_fee&quot;: &quot;0&quot;,&#xd;
      &quot;guarantor_insurance_fee&quot;: &quot;0&quot;,&#xd;
      &quot;cgst&quot;: &quot;0&quot;,&#xd;
      &quot;cgst_percent&quot;: &quot;0&quot;,&#xd;
      &quot;sgst&quot;: &quot;0&quot;,&#xd;
      &quot;sgst_percent&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_id&quot;: &quot;110&quot;,&#xd;
      &quot;member_id&quot;: &quot;0&quot;,&#xd;
      &quot;approx_ewi&quot;: &quot;0&quot;,&#xd;
      &quot;member_insu_percent&quot;: &quot;0&quot;,&#xd;
      &quot;guarantor_insu_percent&quot;: &quot;0&quot;,&#xd;
      &quot;noc_sign&quot;: &quot;0&quot;,&#xd;
      &quot;charges_sign&quot;: &quot;0&quot;,&#xd;
      &quot;cb_eligibility&quot;: &quot;1&quot;,&#xd;
      &quot;product_type_id&quot;: &quot;LTL&quot;,&#xd;
      &quot;cb_id&quot;: null,&#xd;
      &quot;create_date_time&quot;: &quot;21/11/2018 10:40:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;21/11/2018 10:40:35&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;,&#xd;
      &quot;sync_status&quot;: &quot;0&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/loans</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Customer Loan request in Center Meeting" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="loan request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;loan&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;customer_id&quot;: &quot;99&quot;,&#xd;
      &quot;group_id&quot;: &quot;162&quot;,&#xd;
      &quot;center_id&quot;: &quot;161&quot;,&#xd;
      &quot;loan_product_id&quot;: &quot;11&quot;,&#xd;
      &quot;guarantor_id&quot;: &quot;100&quot;,&#xd;
      &quot;loan_code&quot;: &quot;&quot;,&#xd;
      &quot;loan_type&quot;: &quot;2&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;repayment_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;total_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;completed_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;remaining_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;loan_amount&quot;: &quot;22000&quot;,&#xd;
      &quot;outstanding_amt&quot;: &quot;0&quot;,&#xd;
      &quot;arrear_amount&quot;: &quot;0&quot;,&#xd;
      &quot;total_deductions&quot;: &quot;0&quot;,&#xd;
      &quot;net_loan_disbursement&quot;: &quot;0&quot;,&#xd;
      &quot;payment_day&quot;: &quot;0&quot;,&#xd;
      &quot;weekly_day&quot;: &quot;1&quot;,&#xd;
      &quot;loan_purpose&quot;: &quot;TV&quot;,&#xd;
      &quot;disbursement_mode&quot;: &quot;&quot;,&#xd;
      &quot;loan_status&quot;: &quot;2&quot;,&#xd;
      &quot;loans_updated_at&quot;: &quot;2018-11-09 06:12:40&quot;,&#xd;
      &quot;paid_amount&quot;: &quot;0&quot;,&#xd;
      &quot;paid_date&quot;: &quot;&quot;,&#xd;
      &quot;markdeath_preclosure&quot;: &quot;0&quot;,&#xd;
      &quot;noc_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;noc_status&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;4&quot;,&#xd;
      &quot;employee_id&quot;: &quot;3&quot;,&#xd;
      &quot;branch_id&quot;: &quot;7&quot;,&#xd;
      &quot;disbursement_date&quot;: null,&#xd;
      &quot;witness&quot;: &quot;0&quot;,&#xd;
      &quot;signed&quot;: &quot;0&quot;,&#xd;
      &quot;signed_type&quot;: &quot;1&quot;,&#xd;
      &quot;witness_sign&quot;: &quot;0&quot;,&#xd;
      &quot;witness_sign_date&quot;: &quot;&quot;,&#xd;
      &quot;witness_sign_type&quot;: &quot;&quot;,&#xd;
      &quot;apply_date&quot;: null,&#xd;
      &quot;request_date&quot;: &quot;22/11/2018&quot;,&#xd;
      &quot;loan_scheme_id&quot;: &quot;1&quot;,&#xd;
      &quot;processing_fee&quot;: &quot;0&quot;,&#xd;
      &quot;processing_fee_percent&quot;: &quot;0&quot;,&#xd;
      &quot;member_insurance_fee&quot;: &quot;0&quot;,&#xd;
      &quot;guarantor_insurance_fee&quot;: &quot;0&quot;,&#xd;
      &quot;cgst&quot;: &quot;0&quot;,&#xd;
      &quot;cgst_percent&quot;: &quot;0&quot;,&#xd;
      &quot;sgst&quot;: &quot;0&quot;,&#xd;
      &quot;sgst_percent&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_id&quot;: &quot;110&quot;,&#xd;
      &quot;member_id&quot;: &quot;0&quot;,&#xd;
      &quot;approx_ewi&quot;: &quot;0&quot;,&#xd;
      &quot;member_insu_percent&quot;: &quot;0&quot;,&#xd;
      &quot;guarantor_insu_percent&quot;: &quot;0&quot;,&#xd;
      &quot;noc_sign&quot;: &quot;0&quot;,&#xd;
      &quot;charges_sign&quot;: &quot;0&quot;,&#xd;
      &quot;cb_eligibility&quot;: &quot;1&quot;,&#xd;
      &quot;product_type_id&quot;: &quot;LTL&quot;,&#xd;
      &quot;cb_id&quot;: null,&#xd;
      &quot;create_date_time&quot;: &quot;21/11/2018 10:40:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;21/11/2018 10:40:35&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;,&#xd;
      &quot;sync_status&quot;: &quot;0&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/loans</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="loan Apply in GRT" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Customer loan Apply in GRT Meeting" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Customer Loan Apply in GRT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;loan&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;customer_id&quot;: &quot;104&quot;,&#xd;
      &quot;group_id&quot;: &quot;168&quot;,&#xd;
      &quot;center_id&quot;: &quot;167&quot;,&#xd;
      &quot;loan_product_id&quot;: &quot;11&quot;,&#xd;
      &quot;guarantor_id&quot;: &quot;105&quot;,&#xd;
      &quot;loan_code&quot;: &quot;&quot;,&#xd;
      &quot;loan_type&quot;: &quot;1&quot;,&#xd;
      &quot;loan_cycle&quot;: &quot;0&quot;,&#xd;
      &quot;repayment_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;total_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;completed_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;remaining_tenure&quot;: &quot;0&quot;,&#xd;
      &quot;loan_amount&quot;: &quot;32000&quot;,&#xd;
      &quot;outstanding_amt&quot;: &quot;0&quot;,&#xd;
      &quot;arrear_amount&quot;: &quot;0&quot;,&#xd;
      &quot;total_deductions&quot;: &quot;0&quot;,&#xd;
      &quot;net_loan_disbursement&quot;: &quot;0&quot;,&#xd;
      &quot;payment_day&quot;: &quot;0&quot;,&#xd;
      &quot;weekly_day&quot;: &quot;1&quot;,&#xd;
      &quot;loan_purpose&quot;: &quot;TV&quot;,&#xd;
      &quot;disbursement_mode&quot;: &quot;&quot;,&#xd;
      &quot;loan_status&quot;: &quot;2&quot;,&#xd;
      &quot;loans_updated_at&quot;: &quot;2018-11-09 06:12:40&quot;,&#xd;
      &quot;paid_amount&quot;: &quot;0&quot;,&#xd;
      &quot;paid_date&quot;: &quot;&quot;,&#xd;
      &quot;markdeath_preclosure&quot;: &quot;0&quot;,&#xd;
      &quot;noc_image_id&quot;: &quot;0&quot;,&#xd;
      &quot;noc_status&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;employee_id&quot;: &quot;3&quot;,&#xd;
      &quot;branch_id&quot;: &quot;7&quot;,&#xd;
      &quot;disbursement_date&quot;: null,&#xd;
      &quot;witness&quot;: &quot;0&quot;,&#xd;
      &quot;signed&quot;: &quot;0&quot;,&#xd;
      &quot;signed_type&quot;: &quot;1&quot;,&#xd;
      &quot;witness_sign&quot;: &quot;0&quot;,&#xd;
      &quot;witness_sign_date&quot;: &quot;&quot;,&#xd;
      &quot;witness_sign_type&quot;: &quot;&quot;,&#xd;
      &quot;apply_date&quot;: &quot;22/11/2018&quot;,&#xd;
      &quot;request_date&quot;: null,&#xd;
      &quot;loan_scheme_id&quot;: &quot;1&quot;,&#xd;
      &quot;processing_fee&quot;: &quot;0&quot;,&#xd;
      &quot;processing_fee_percent&quot;: &quot;0&quot;,&#xd;
      &quot;member_insurance_fee&quot;: &quot;0&quot;,&#xd;
      &quot;guarantor_insurance_fee&quot;: &quot;0&quot;,&#xd;
      &quot;cgst&quot;: &quot;0&quot;,&#xd;
      &quot;cgst_percent&quot;: &quot;0&quot;,&#xd;
      &quot;sgst&quot;: &quot;0&quot;,&#xd;
      &quot;sgst_percent&quot;: &quot;0&quot;,&#xd;
      &quot;meeting_id&quot;: &quot;118&quot;,&#xd;
      &quot;member_id&quot;: &quot;0&quot;,&#xd;
      &quot;approx_ewi&quot;: &quot;0&quot;,&#xd;
      &quot;member_insu_percent&quot;: &quot;0&quot;,&#xd;
      &quot;guarantor_insu_percent&quot;: &quot;0&quot;,&#xd;
      &quot;noc_sign&quot;: &quot;0&quot;,&#xd;
      &quot;charges_sign&quot;: &quot;0&quot;,&#xd;
      &quot;cb_eligibility&quot;: &quot;1&quot;,&#xd;
      &quot;product_type_id&quot;: &quot;LTL&quot;,&#xd;
      &quot;cb_id&quot;: null,&#xd;
      &quot;create_date_time&quot;: &quot;23/11/2018 10:40:35&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;23/11/2018 10:40:35&quot;,&#xd;
      &quot;created_by&quot;: &quot;5&quot;,&#xd;
      &quot;is_deleted&quot;: &quot;0&quot;,&#xd;
      &quot;sync_status&quot;: &quot;0&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/loans</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GRT Meeting Submit" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GRT Meeting Submit/Center Meeting Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;118&quot;,&#xd;
      &quot;center_id&quot;:&quot;167&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;23/11/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;23/11/2018 06:00:34&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;23/11/2018 06:00:34&quot;,&#xd;
      &quot;description&quot;:&quot;GRT Submitted&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;22/11/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
     {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:&quot;167&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;4&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;23/11/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;center meeting&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;23/11/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;23/11/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;2&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;10:30&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GRT_Retake/retrain_Meeting_BM Sync_Down" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="GRT Retake/Retrain" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sync down" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/sync/down</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GRT Retake/Retrain" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GRT RetakeRetrain" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;225&quot;,&#xd;
      &quot;center_id&quot;:&quot;218&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;26&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;description&quot;:&quot;GRT Retake/Retrain&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CGT Meetting for GRT Retake" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Meeting Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;226&quot;,&#xd;
      &quot;center_id&quot;:&quot;218&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;05/12/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;05/12/2018 10:00:00&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;05/12/2018 17:00:00&quot;,&#xd;
      &quot;description&quot;:&quot;CGT Meeting for GRT Retake/retrain&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;05/12/2018 13:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;05/12/2018 13:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;&quot;,&#xd;
      &quot;center_id&quot;:&quot;218&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;05/12/2018 10:00:00&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;CGT Meeting for GRT Retake/retrain&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;05/12/2018 17:00:00&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;05/12/2018 18:00:00&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BANK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;74&quot;,&#xd;
      &quot;center_id&quot;: &quot;218&quot;,&#xd;
      &quot;customer_id&quot;: &quot;169&quot;,&#xd;
      &quot;customer_name&quot;: &quot;Anita G3 GRT Retake/Retrain&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;State Bank of Travancore-4&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Pathanamthitta&quot;,&#xd;
      &quot;account_number&quot;: &quot;67070774735&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;SBTR0000560&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;29/11/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;29/11/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="family" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;53&quot;,&#xd;
      &quot;center_id&quot;:&quot;173&quot;,&#xd;
      &quot;name&quot;: &quot;Rajeevan K1&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1977&quot;,         &#xd;
      &quot;occupation&quot;: &quot;farmer&quot;,&#xd;
      &quot;education&quot;: &quot;10&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;110&quot;,&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Member aadhar" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Member aadhar,voter id,PAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;162&quot;,&#xd;
                &quot;customer_id&quot;: &quot;110&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: &quot;173&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;1&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;494386606015&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Anita G&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Raman&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1985&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;kodumon&quot;,&#xd;
                &quot;post_office&quot;: &quot;kodumon&quot;,&#xd;
                &quot;district&quot;: &quot;Pathananthitta&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691555&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;22/11/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;22/11/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }, &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;163&quot;,&#xd;
                &quot;customer_id&quot;: &quot;110&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: &quot;173&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;LRM2675602&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Anita G&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Vdakkapuruthu 3&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;07/03/1983&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Kodumon&quot;,&#xd;
                &quot;post_office&quot;: &quot;kodumon&quot;,&#xd;
                &quot;district&quot;: &quot;Pathanamtthita&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691555&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        },&#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;164&quot;,&#xd;
                &quot;customer_id&quot;: &quot;110&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: &quot;173&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;4&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;1234567890&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Anita G&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Manoj Bhavanam&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;7/3/1983&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Mylom&quot;,&#xd;
                &quot;post_office&quot;: &quot;Pallickal-kottarakara&quot;,&#xd;
                &quot;district&quot;: &quot;Kollam&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691566&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
  &#xd;
        &#xd;
        &#xd;
     ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Co-applicant" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Co-Applicant" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;165&quot;,&#xd;
                &quot;customer_id&quot;:&quot;111&quot;,&#xd;
                &quot;customer_type&quot;: &quot;Co-Applicant&quot;,&#xd;
                &quot;center_id&quot;: &quot;173&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;6&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;559064344367&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Rajeevan KA&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Raman&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1977&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Kodumon&quot;,&#xd;
                &quot;post_office&quot;: &quot;kodumon&quot;,&#xd;
                &quot;district&quot;: &quot;Pathanamthitta&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691555&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GRT_Retake_Meeting_BM Sync_Down" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="GRT Retake" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sync down" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/sync/down</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GRT Retake" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GRT Retake" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;217&quot;,&#xd;
      &quot;center_id&quot;:&quot;214&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;description&quot;:&quot;GRT Retake Dec 5&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BANK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;72&quot;,&#xd;
      &quot;center_id&quot;: &quot;214&quot;,&#xd;
      &quot;customer_id&quot;: &quot;165&quot;,&#xd;
      &quot;customer_name&quot;: &quot;Anita G GRT retake 5 Dec&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;State Bank of Travancore-27&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Pathanamthitta&quot;,&#xd;
      &quot;account_number&quot;: &quot;67070774735&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;SBTR0000560&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;04/12/2018 06:29:55&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;04/12/2018 06:43:12&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Member aadhar" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Member aadhar,voter id,PAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;253&quot;,&#xd;
                &quot;customer_id&quot;: &quot;165&quot;,&#xd;
                &quot;customer_type&quot;: &quot;customer&quot;,&#xd;
                &quot;center_id&quot;: &quot;214&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;2&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;LRM2675604&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Anita G Voter ID Dec 5&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Vdakkapuruthu 3&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;07/03/1983&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Kodumon&quot;,&#xd;
                &quot;post_office&quot;: &quot;kodumon&quot;,&#xd;
                &quot;district&quot;: &quot;Pathanamtthita&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691555&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;04/12/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;04/12/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;9&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
              &#xd;
     ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Meeting Update" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Meeting Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;188&quot;,&#xd;
      &quot;center_id&quot;:&quot;198&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;2&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;27/11/2018 06:08:50&quot;,&#xd;
      &quot;status&quot;: &quot;7&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;27/11/2018 06:08:50&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;27/11/2018 11:57:21&quot;,&#xd;
      &quot;description&quot;:&quot;CGT Meeting for GRT Retake&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;27/11/2018 11:47:21&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;27/11/2018 11:47:21&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    },&#xd;
     {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;0&quot;,&#xd;
      &quot;center_id&quot;:&quot;198&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;27/11/2018 06:08:50&quot;,&#xd;
      &quot;status&quot;: &quot;0&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;&quot;,&#xd;
      &quot;description&quot;:&quot;CGT Meeting for GRT Retake&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;27/11/2018 11:47:21&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;27/11/2018 11:47:21&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="bank1 for CGT retake" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BANK for CGT retake" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bank&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;65&quot;,&#xd;
      &quot;center_id&quot;: &quot;198&quot;,&#xd;
      &quot;customer_id&quot;: &quot;145&quot;,&#xd;
      &quot;customer_name&quot;: &quot;Anita G GRT retake-1&quot;,&#xd;
      &quot;address_proof_id&quot;: &quot;3&quot;,&#xd;
      &quot;bank_name&quot;: &quot;State Bank of Travancore-12&quot;,&#xd;
      &quot;branch_name&quot;: &quot;Pathanamthitta-1&quot;,&#xd;
      &quot;account_number&quot;: &quot;67070774735&quot;,&#xd;
      &quot;ifsc_code&quot;: &quot;SBTR0000560&quot;,&#xd;
      &quot;image_front_id&quot;: &quot;&quot;,&#xd;
      &quot;image_back_id&quot;: &quot;&quot;,&#xd;
      &quot;image_local_path&quot;: &quot;&quot;,&#xd;
      &quot;create_date_time&quot;: &quot;27/11/2018 11:47:21&quot;,&#xd;
      &quot;update_date_time&quot;: &quot;27/11/2018 11:47:21&quot;,&#xd;
      &quot;status&quot;: &quot;9&quot;,&#xd;
      &quot;created_by&quot;: &quot;12&quot;,&#xd;
      &quot;note&quot;: &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;0&quot;&#xd;
    }&#xd;
    ]&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/banks</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="family" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="family" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;family&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;53&quot;,&#xd;
      &quot;center_id&quot;:&quot;173&quot;,&#xd;
      &quot;name&quot;: &quot;Rajeevan K1&quot;,&#xd;
      &quot;relation&quot;: &quot;5&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;23/12/1977&quot;,         &#xd;
      &quot;occupation&quot;: &quot;farmer&quot;,&#xd;
      &quot;education&quot;: &quot;10&quot;,&#xd;
      &quot;living_with_family&quot;: &quot;1&quot;,&#xd;
      &quot;monthly_income&quot;: &quot;12345&quot;,&#xd;
      &quot;customer_id&quot;: &quot;110&quot;,&#xd;
      &quot;status&quot;: &quot;5&quot;,&#xd;
      &quot;note&quot;:&quot;Welcome to KPB&quot;,&#xd;
      &quot;image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/family</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Address Proof of Co-applicant" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Address Proof of Co-Applicant" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> {&#xd;
                &quot;address_proof&quot;: [ &#xd;
               {&#xd;
                &quot;_id&quot;: &quot;10001&quot;,&#xd;
                &quot;id&quot;: &quot;165&quot;,&#xd;
                &quot;customer_id&quot;:&quot;111&quot;,&#xd;
                &quot;customer_type&quot;: &quot;Co-Applicant&quot;,&#xd;
                &quot;center_id&quot;: &quot;173&quot;,&#xd;
                &quot;id_proof_type&quot;: &quot;6&quot;,&#xd;
                &quot;sub_id_proof&quot;: &quot;0&quot;,&#xd;
                &quot;idproof_id&quot;: &quot;559064344367&quot;,&#xd;
                &quot;image_front_id&quot;: &quot;0&quot;,&#xd;
                &quot;image_back_id&quot;: &quot;0&quot;,&#xd;
                &quot;name&quot;: &quot;Rajeevan KA&quot;,&#xd;
                &quot;resident_name&quot;: &quot;Raman&quot;,&#xd;
                &quot;gender&quot;: &quot;1&quot;,&#xd;
                &quot;dob&quot;: &quot;1/1/1977&quot;,&#xd;
                &quot;age&quot;: &quot;27&quot;,&#xd;
                &quot;village&quot;: &quot;Kodumon&quot;,&#xd;
                &quot;post_office&quot;: &quot;kodumon&quot;,&#xd;
                &quot;district&quot;: &quot;Pathanamthitta&quot;,&#xd;
                &quot;district_id&quot;: &quot;290&quot;,&#xd;
                &quot;state&quot;: &quot;Kerala&quot;,&#xd;
                &quot;state_id&quot;: &quot;18&quot;,&#xd;
                &quot;pin_code&quot;: &quot;691555&quot;,&#xd;
                &quot;scanned&quot;: &quot;1&quot;,&#xd;
                &quot;create_date_time&quot;: &quot;15/10/2018 04:42:27&quot;,&#xd;
                &quot;update_date_time&quot;: &quot;15/10/2018 04:47:51&quot;,&#xd;
                &quot;created_by&quot;: &quot;4&quot;,&#xd;
                &quot;status&quot;: &quot;0&quot;,&#xd;
                &quot;note&quot;: &quot;&quot;,&#xd;
                &quot;is_deleted&quot;: &quot;0&quot;&#xd;
        }&#xd;
        ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/idproofs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Collection Meeting" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Collection API" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Collection" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;collection&quot;: &#xd;
[&#xd;
{&#xd;
&quot;_id&quot;: 10002,&#xd;
&quot;id&quot;: 0,&#xd;
&quot;center_id&quot;: 1502,&#xd;
&quot;meeting_id&quot;: 1959,&#xd;
&quot;meeting_type&quot;: 4,&#xd;
&quot;customer_id&quot;: &quot;2779&quot;,&#xd;
&quot;loan_id&quot;: &quot;24&quot;,&#xd;
&quot;image_id&quot;: null,&#xd;
&quot;interest&quot;: 0,&#xd;
&quot;demand&quot;: 0,&#xd;
&quot;principal_amount&quot;: 0,&#xd;
&quot;collected_amount&quot;: 0,&#xd;
&quot;collected_date&quot;: &quot;12/10/2018&quot;,&#xd;
&quot;arrear_amount&quot;: 0,&#xd;
&quot;excess_amount&quot;: 0,&#xd;
&quot;markdeath_preclosure&quot;: 0&#xd;
},&#xd;
{&#xd;
&quot;_id&quot;: 10003,&#xd;
&quot;id&quot;: 0,&#xd;
&quot;center_id&quot;: 1502,&#xd;
&quot;meeting_id&quot;: 1959,&#xd;
&quot;meeting_type&quot;: 4,&#xd;
&quot;customer_id&quot;: &quot;2779&quot;,&#xd;
&quot;loan_id&quot;: &quot;25&quot;,&#xd;
&quot;image_id&quot;: null,&#xd;
&quot;interest&quot;: 0,&#xd;
&quot;demand&quot;: 0,&#xd;
&quot;principal_amount&quot;: 0,&#xd;
&quot;collected_amount&quot;: 0,&#xd;
&quot;collected_date&quot;: &quot;12/10/2018&quot;,&#xd;
&quot;arrear_amount&quot;: 0,&#xd;
&quot;excess_amount&quot;: 0,&#xd;
&quot;markdeath_preclosure&quot;: 0&#xd;
}&#xd;
]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/collections</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GRT Fail" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.20.21</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">KPB10003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="passWord" elementType="Argument">
              <stringProp name="Argument.name">passWord</stringProp>
              <stringProp name="Argument.value">Qq123456!</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_Token" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${passWord}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="Test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Renju</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Test</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Error_On_Token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sync down" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/sync/down</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GRT Meeting Submit" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GRT Meeting Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meeting&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;10001&quot;,&#xd;
      &quot;id&quot;: &quot;222&quot;,&#xd;
      &quot;center_id&quot;:&quot;216&quot;,&#xd;
      &quot;meeting_type&quot;: &quot;3&quot;,&#xd;
      &quot;scheduled_date_time&quot;: &quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;status&quot;: &quot;8&quot;,&#xd;
      &quot;start_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;end_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;description&quot;:&quot;GRT Fail&quot;,&#xd;
      &quot;create_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;update_date_time&quot;:&quot;05/12/2018 06:00:34&quot;,&#xd;
      &quot;reference_id&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_day&quot;:&quot;&quot;,&#xd;
      &quot;center_meeting_time&quot;:&quot;&quot;,&#xd;
      &quot;image_id&quot;:0,&#xd;
      &quot;attendance_image_id&quot;:0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/sync/meetings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
